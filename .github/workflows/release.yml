name: Release Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm install -g semantic-release@^22 conventional-changelog-conventionalcommits@^7
      
      - name: Verify the integrity of provenance attestations and registry signatures
        run: npm audit signatures
      
      - name: Run tests (if available)
        run: |
          if npm run test:ci --if-present; then
            echo "Tests passed"
          else
            echo "No tests found or tests failed"
            npm run test --if-present || echo "No test script found"
          fi
      
      - name: Build project (if available)
        run: |
          npm run build --if-present || echo "No build script found"
      
      - name: Create .releaserc.json config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "preset": "conventionalcommits",
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              [
                "@semantic-release/changelog",
                {
                  "changelogFile": "CHANGELOG.md"
                }
              ],
              [
                "@semantic-release/npm",
                {
                  "npmPublish": false
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": ["CHANGELOG.md", "package.json", "package-lock.json"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ],
              [
                "@semantic-release/github",
                {
                  "successComment": false,
                  "failComment": false,
                  "releasedLabels": ["released"]
                }
              ]
            ]
          }
          EOF
      
      - name: Install semantic-release plugins
        run: |
          npm install -D @semantic-release/changelog @semantic-release/git @semantic-release/github
      
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release
      
      - name: Upload release artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            CHANGELOG.md
            package.json
          retention-days: 30
